{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"index.html","text":"Welcome to the User Manual for Tool 1 This Tool is part of a suite of genome analysis tools that explore bacterial genomes. The suite includes: Application Description The Core Genome assembly, taxonomic classification, phylogeny, annotation and mass screening. Tool 1 Mass screening with curated databases. Tool 2 Mass screening with genes you choose. Tool 3 Comparison of genomes, and phylogeny. Tool 4 Primer design: identification of unique stretches of DNA. They are built with the pipeline manager Nextflow , and operate within Singularity containers. The suite was developed as part of a collaborative project between Volac International Ltd . and Cardiff University , partly funded by Innovate UK as part of a knowledge transfer partnership (KTP) . What is Tool 1 for? Tool 1 screens genomes for antimicrobial resistance or virulence genes. It uses the latest version of curated and peer-reviewed databases. For EFSA product registrations use Tool 1 to fetch the latest AMR report. What does Tool 1 do? Tool 1 downloads the most recent database version. The databases contain known antimicrobial resistance or virulence genes. Using the DNA sequences of these genes, and a local alignment search tool (blast) it detects acquired resistance genes in the genomes of your query strains. Tool 1 then summarises the data and also makes a report summarising the run parameters including the date.","title":"Introduction"},{"location":"index.html#welcome-to-the-user-manual-for-tool-1","text":"This Tool is part of a suite of genome analysis tools that explore bacterial genomes. The suite includes: Application Description The Core Genome assembly, taxonomic classification, phylogeny, annotation and mass screening. Tool 1 Mass screening with curated databases. Tool 2 Mass screening with genes you choose. Tool 3 Comparison of genomes, and phylogeny. Tool 4 Primer design: identification of unique stretches of DNA. They are built with the pipeline manager Nextflow , and operate within Singularity containers. The suite was developed as part of a collaborative project between Volac International Ltd . and Cardiff University , partly funded by Innovate UK as part of a knowledge transfer partnership (KTP) .","title":"Welcome to the User Manual for Tool 1"},{"location":"index.html#what-is-tool-1-for","text":"Tool 1 screens genomes for antimicrobial resistance or virulence genes. It uses the latest version of curated and peer-reviewed databases. For EFSA product registrations use Tool 1 to fetch the latest AMR report.","title":"What is Tool 1 for?"},{"location":"index.html#what-does-tool-1-do","text":"Tool 1 downloads the most recent database version. The databases contain known antimicrobial resistance or virulence genes. Using the DNA sequences of these genes, and a local alignment search tool (blast) it detects acquired resistance genes in the genomes of your query strains. Tool 1 then summarises the data and also makes a report summarising the run parameters including the date.","title":"What does Tool 1 do?"},{"location":"access.html","text":"Logging in Connect your local computer to the server. MobaXterm , the enhanced terminal for Windows is recommended. Folders can be found in the side bar to the left. Folders and files can be directly dragged and dropped between your personal computer and the Tool. This Tool is located inside the genome_store folder. Opening a stable connection (recommended) You currently have access to the Tool if you have completed the above section. However, sometimes the network connection between the computer that you are using and the machine where the Tool is located can break. If the Tool is running when the connection breaks, even if the break is only brief, the Tool will stop. You can tell if this has happen because your terminal\u2019s window will freeze; there may also be a partially populated output folder. A terminal multiplexer (tmux) solves this. A terminal multiplexer allows the user to start a session and then detach, so a remote process continues running even when the user is disconnected. It also has the benefit of allowing the user to detach from one computer and reattach using a different computer. To initiate a tmux session in the Appliance terminal window enter: tmux new -s <name> Example This is the code to set up a stable tmux connection named Idris: tmux new -s Idris Tip You can set up multiple tmux sessions; give each one a different name. To detach from a session hold down the Ctrl key and press b , release both keys, then press d . To list existing tmux sessions use tmux ls . To reconnect to an existing session use tmux a -t <name> .","title":"Accessing the server"},{"location":"access.html#logging-in","text":"Connect your local computer to the server. MobaXterm , the enhanced terminal for Windows is recommended. Folders can be found in the side bar to the left. Folders and files can be directly dragged and dropped between your personal computer and the Tool. This Tool is located inside the genome_store folder.","title":"Logging in"},{"location":"access.html#opening-a-stable-connection-recommended","text":"You currently have access to the Tool if you have completed the above section. However, sometimes the network connection between the computer that you are using and the machine where the Tool is located can break. If the Tool is running when the connection breaks, even if the break is only brief, the Tool will stop. You can tell if this has happen because your terminal\u2019s window will freeze; there may also be a partially populated output folder. A terminal multiplexer (tmux) solves this. A terminal multiplexer allows the user to start a session and then detach, so a remote process continues running even when the user is disconnected. It also has the benefit of allowing the user to detach from one computer and reattach using a different computer. To initiate a tmux session in the Appliance terminal window enter: tmux new -s <name> Example This is the code to set up a stable tmux connection named Idris: tmux new -s Idris Tip You can set up multiple tmux sessions; give each one a different name. To detach from a session hold down the Ctrl key and press b , release both keys, then press d . To list existing tmux sessions use tmux ls . To reconnect to an existing session use tmux a -t <name> .","title":"Opening a stable connection (recommended)"},{"location":"faq.html","text":"Frequently asked questions Which genomes are searched? Tool 1 uses the tool_1.nf workflow to query the selected genomes in the input_tool1 folder. Additional, the tool_1_EVERYTHING.nf workflow can be used to search ALL the genomes in the LIBRARY folder. Which genomes are in the LIBRARY folder? All genomes assembled by the Core appliance can be found in the Tool 1 LIBRARY folder. This is updated manually by running populate_inputs.sh . Instructions on how to run populate_inputs.sh can be found here . The files are hard linked, so they are not duplicated on the server. Additionally, reference genomes can be added to this folder. Which databases are available? The available databases are: Database command Database contents ARG-ANNOT argannot Antibiotic resistance genes CARD card The Comprehensive Antibiotic Resistance Database EcOH ecoh Serotyping of E. coli ecoli_vf ecoli_vf Escherichia coli virulence factors. Included VFDB and more E.coli specific genes NCBI BARRGD ncbi NCBI Bacterial Antimicrobial Resistance Reference Gene Database PlasmidFinder plasmidfinder In silico detection and typing of plasmids ResFinder resfinder ResFinder identifies acquired antimicrobial resistance genes VFDB vfdb Virulence factor database What are the different folders for? The Tool 1 file system contains the following folders: Directory name Description of contents LIBRARY The sequence files ( .fa ) for all sequenced isolates input_tool1 All assemblies ( *.fa ) in this directory will be tested by tool_1. output_tool1 Your output data will be deposited here in subdirectories named xxx_i(yy)_c(zz)_YYYY-MM-DD_HH:MM , where xxx is the database, yy is the identity and zz is the coverage. This is followed by the date and time the run was started. work The Nextflow working directory. How do you run Tool 1? Running Tool 1 is straight-forward. Briefly, once you have accessed Tool 1 and placed the assemblies you wish to test into the input folder all you need to do is enter a single command and the results will be deposited in the output folder. What documents are made by Tool 1? In the run output folder, Tool 1 deposits the documents in 2 sub-folders: isolate and summary. In the isolate folder there will be a results file for each strain. In the summary folder there will be a single document summarising all \u2018hits\u2019 results. Additionally, in the run output folder itself you will find run_parameters.txt. This text document lists: the database used (`xxx`) the number of sequences in the database, the date the database was downloaded, the version number of the software (abricate), the minimum DNA %identity (`yy`) and the minimum DNA %coverage (`zz`). Ignore help=false . This is an expected byproduct of the help/usage message. How do you view the output files? You can open the files in Excel. The output files are in .tab format. The run_parameters.txt document can be opened in any text editor. Can I change the settings of Tool 1? Yes, you can modify the two different settings: identity and coverage . Using the default settings there must be a minimum DNA identity of 80%, and a minimum DNA coverage of 80% for a match to be recorded. These can be altered when you set Tool 1 to run. For all runs, the settings are recorded in the name of the newly created output folder, e.g. the results of a run on May 21st 2021 started at 1.30 pm using the resfinder database and default settings will be stored in this folder: resfinder-i80-c80__2021-05-21_13:15/ . Where can I find further information about Tool 1? Tool 1 uses the ABRicate software tool. It was developed by Torsten Seemann and Bj\u00f6rn Gr\u00fcning in Melborne, Australia. The ABRicate information page can be found here on GitHub.","title":"FAQs"},{"location":"faq.html#frequently-asked-questions","text":"","title":"Frequently asked questions"},{"location":"faq.html#which-genomes-are-searched","text":"Tool 1 uses the tool_1.nf workflow to query the selected genomes in the input_tool1 folder. Additional, the tool_1_EVERYTHING.nf workflow can be used to search ALL the genomes in the LIBRARY folder.","title":"Which genomes are searched?"},{"location":"faq.html#which-genomes-are-in-the-library-folder","text":"All genomes assembled by the Core appliance can be found in the Tool 1 LIBRARY folder. This is updated manually by running populate_inputs.sh . Instructions on how to run populate_inputs.sh can be found here . The files are hard linked, so they are not duplicated on the server. Additionally, reference genomes can be added to this folder.","title":"Which genomes are in the LIBRARY folder?"},{"location":"faq.html#which-databases-are-available","text":"The available databases are: Database command Database contents ARG-ANNOT argannot Antibiotic resistance genes CARD card The Comprehensive Antibiotic Resistance Database EcOH ecoh Serotyping of E. coli ecoli_vf ecoli_vf Escherichia coli virulence factors. Included VFDB and more E.coli specific genes NCBI BARRGD ncbi NCBI Bacterial Antimicrobial Resistance Reference Gene Database PlasmidFinder plasmidfinder In silico detection and typing of plasmids ResFinder resfinder ResFinder identifies acquired antimicrobial resistance genes VFDB vfdb Virulence factor database","title":"Which databases are available?"},{"location":"faq.html#what-are-the-different-folders-for","text":"The Tool 1 file system contains the following folders: Directory name Description of contents LIBRARY The sequence files ( .fa ) for all sequenced isolates input_tool1 All assemblies ( *.fa ) in this directory will be tested by tool_1. output_tool1 Your output data will be deposited here in subdirectories named xxx_i(yy)_c(zz)_YYYY-MM-DD_HH:MM , where xxx is the database, yy is the identity and zz is the coverage. This is followed by the date and time the run was started. work The Nextflow working directory.","title":"What are the different folders for?"},{"location":"faq.html#how-do-you-run-tool-1","text":"Running Tool 1 is straight-forward. Briefly, once you have accessed Tool 1 and placed the assemblies you wish to test into the input folder all you need to do is enter a single command and the results will be deposited in the output folder.","title":"How do you run Tool 1?"},{"location":"faq.html#what-documents-are-made-by-tool-1","text":"In the run output folder, Tool 1 deposits the documents in 2 sub-folders: isolate and summary. In the isolate folder there will be a results file for each strain. In the summary folder there will be a single document summarising all \u2018hits\u2019 results. Additionally, in the run output folder itself you will find run_parameters.txt. This text document lists: the database used (`xxx`) the number of sequences in the database, the date the database was downloaded, the version number of the software (abricate), the minimum DNA %identity (`yy`) and the minimum DNA %coverage (`zz`). Ignore help=false . This is an expected byproduct of the help/usage message.","title":"What documents are made by Tool 1?"},{"location":"faq.html#how-do-you-view-the-output-files","text":"You can open the files in Excel. The output files are in .tab format. The run_parameters.txt document can be opened in any text editor.","title":"How do you view the output files?"},{"location":"faq.html#can-i-change-the-settings-of-tool-1","text":"Yes, you can modify the two different settings: identity and coverage . Using the default settings there must be a minimum DNA identity of 80%, and a minimum DNA coverage of 80% for a match to be recorded. These can be altered when you set Tool 1 to run. For all runs, the settings are recorded in the name of the newly created output folder, e.g. the results of a run on May 21st 2021 started at 1.30 pm using the resfinder database and default settings will be stored in this folder: resfinder-i80-c80__2021-05-21_13:15/ .","title":"Can I change the settings of Tool 1?"},{"location":"faq.html#where-can-i-find-further-information-about-tool-1","text":"Tool 1 uses the ABRicate software tool. It was developed by Torsten Seemann and Bj\u00f6rn Gr\u00fcning in Melborne, Australia. The ABRicate information page can be found here on GitHub.","title":"Where can I find further information about Tool 1?"},{"location":"loading.html","text":"Loading your query genomes The genomes you wish to query must be saved in the input folder, input_tool1 . Tool 1 screens all genomes in this folder. Therefore, if there are files remaining in this folder from a previous run these must be deleted if you do not wish to screen them. The genome assembly files for all the sequenced strains are saved in the LIBRARY folder. Copy the files for the genomes you wish to screen from the LIBRARY Folder to the input_tool1 folder.","title":"Loading query genomes"},{"location":"loading.html#loading-your-query-genomes","text":"The genomes you wish to query must be saved in the input folder, input_tool1 . Tool 1 screens all genomes in this folder. Therefore, if there are files remaining in this folder from a previous run these must be deleted if you do not wish to screen them. The genome assembly files for all the sequenced strains are saved in the LIBRARY folder. Copy the files for the genomes you wish to screen from the LIBRARY Folder to the input_tool1 folder.","title":"Loading your query genomes"},{"location":"options.html","text":"Additional settings Tool 1 has two additional settings that you can change: identity and coverage . Identity is used to specify the minimum DNA identity (default `80`). Coverage is used to specifiy the minimum DNA coverage (default `80`). You can specify these settings in the same way that you specified the database, as follows: --identity 'yy' --coverage 'zz' The command will look like this: nextflow run tool_1.nf --abricateDB 'xxx' --identity 'yy' --coverage 'zz' Substitute xxx +/ yy +/ zz with the actual parameter you wish to use. Example 1 To run Tool 1 with the vfdb database, default 80% minimum DNA identity and 90% minimum DNA coverage. nextflow run tool_1.nf --abricateDB 'vfdb' --coverage '90' Example 2 To run Tool 1 with the default card database, 70% minimum DNA identity and 75% minimum DNA coverage. nextflow run tool_1.nf --identity '70' --coverage '75' Example 3 To run ALL strains using Tool 1 with the resfinder database and 95% minimum DNA identity. nextflow run tool_1_EVERYTHING.nf --abricateDB 'resfinder' --identity '95'","title":"Customisation"},{"location":"options.html#additional-settings","text":"Tool 1 has two additional settings that you can change: identity and coverage . Identity is used to specify the minimum DNA identity (default `80`). Coverage is used to specifiy the minimum DNA coverage (default `80`). You can specify these settings in the same way that you specified the database, as follows: --identity 'yy' --coverage 'zz' The command will look like this: nextflow run tool_1.nf --abricateDB 'xxx' --identity 'yy' --coverage 'zz' Substitute xxx +/ yy +/ zz with the actual parameter you wish to use. Example 1 To run Tool 1 with the vfdb database, default 80% minimum DNA identity and 90% minimum DNA coverage. nextflow run tool_1.nf --abricateDB 'vfdb' --coverage '90' Example 2 To run Tool 1 with the default card database, 70% minimum DNA identity and 75% minimum DNA coverage. nextflow run tool_1.nf --identity '70' --coverage '75' Example 3 To run ALL strains using Tool 1 with the resfinder database and 95% minimum DNA identity. nextflow run tool_1_EVERYTHING.nf --abricateDB 'resfinder' --identity '95'","title":"Additional settings"},{"location":"quick.html","text":"Quick start commands Deposit the assembled genomes of the strains you want to compare in the input folder. Set up a stable connection: tmux new -s <name> To run Tool 1: nextflow run tool_1.nf --abricateDB 'xxx' Available databases argannot , card , ecoh , ecoli_vf , ncbi , plasmidfinder , resfinder and vfdb Additional options nextflow run tool_1.nf --abricateDB 'xxx' --identity 'yy' --coverage 'zz' Example nextflow run tool_1.nf --abricateDB 'resfinder' --identity '90' --coverage '75' Tip To view the Quick start instructions from the command line use: nextflow run tool_1.nf --help","title":"Quick start"},{"location":"quick.html#quick-start-commands","text":"Deposit the assembled genomes of the strains you want to compare in the input folder. Set up a stable connection: tmux new -s <name> To run Tool 1: nextflow run tool_1.nf --abricateDB 'xxx'","title":"Quick start commands"},{"location":"quick.html#available-databases","text":"argannot , card , ecoh , ecoli_vf , ncbi , plasmidfinder , resfinder and vfdb","title":"Available databases"},{"location":"quick.html#additional-options","text":"nextflow run tool_1.nf --abricateDB 'xxx' --identity 'yy' --coverage 'zz' Example nextflow run tool_1.nf --abricateDB 'resfinder' --identity '90' --coverage '75' Tip To view the Quick start instructions from the command line use: nextflow run tool_1.nf --help","title":"Additional options"},{"location":"running.html","text":"Running Tool 1 In order to run Tool 1 you need to enter two commands in the Terminal window. First enter this command: cd ~/genome_tools/Tool_1 Then enter this command. Replace xxx with the database you wish to search (keep the apostrophes): nextflow run tool_1.nf --abricateDB 'xxx' Specifying a database The databases commands are: argannot , card , ecoh , ecoli_vf , megares , ncbi , plasmidfinder , resfinder and vfdb . Information about the databases can be found in the FAQs section. Example nextflow run tool_1.nf --abricateDB 'resfinder' Tip Tool 1 will use the default database if you do not include \u2013-abricateDB 'xxx' , which is card . Running Tool 1 with ALL genomes Tool 1 has a special feature that allows you to search ALL assembly files in the LIBRARY folder, rather than a selected subset in the tool1_input folder. Simply use this command: nextflow run tool_1_EVERYTHING.nf --abricateDB 'xxx' Remember to specify which database you want to use, with --abricateDB 'xxx' . The default is card.","title":"Initiating Tool 1"},{"location":"running.html#running-tool-1","text":"In order to run Tool 1 you need to enter two commands in the Terminal window. First enter this command: cd ~/genome_tools/Tool_1 Then enter this command. Replace xxx with the database you wish to search (keep the apostrophes): nextflow run tool_1.nf --abricateDB 'xxx'","title":"Running Tool 1"},{"location":"running.html#specifying-a-database","text":"The databases commands are: argannot , card , ecoh , ecoli_vf , megares , ncbi , plasmidfinder , resfinder and vfdb . Information about the databases can be found in the FAQs section. Example nextflow run tool_1.nf --abricateDB 'resfinder' Tip Tool 1 will use the default database if you do not include \u2013-abricateDB 'xxx' , which is card .","title":"Specifying a database"},{"location":"running.html#running-tool-1-with-all-genomes","text":"Tool 1 has a special feature that allows you to search ALL assembly files in the LIBRARY folder, rather than a selected subset in the tool1_input folder. Simply use this command: nextflow run tool_1_EVERYTHING.nf --abricateDB 'xxx' Remember to specify which database you want to use, with --abricateDB 'xxx' . The default is card.","title":"Running Tool 1 with ALL genomes"},{"location":"troubleshooting.html","text":"Troubleshooting These are some common remedies: It is (usually) safer to copy and paste commands To avoid spellling error use the \u2018tab\u2019 key to auto-complete Do the hyphens or inverted commas need to be re-typed? Are the spaces in the correct place? Is the command prompt in the correct directory (folder)? Is the login connection still active Is the input file named correctly? Never use {} or [] in file names. If these fail, ask for help.","title":"Troubleshooting"},{"location":"troubleshooting.html#troubleshooting","text":"These are some common remedies: It is (usually) safer to copy and paste commands To avoid spellling error use the \u2018tab\u2019 key to auto-complete Do the hyphens or inverted commas need to be re-typed? Are the spaces in the correct place? Is the command prompt in the correct directory (folder)? Is the login connection still active Is the input file named correctly? Never use {} or [] in file names. If these fail, ask for help.","title":"Troubleshooting"},{"location":"unloading.html","text":"Downloading the output files To transfer the files to your personal computer drag and drop. Each time Tool 3 runs it makes a new folder inside the output folder, output_tool1 , which can be found here: ~/genome_tools/Tool_1/output_tool1/ The output folders are named according to the run parameters: xxx-yy-zz_YYYY-MM-DD_HH:MM Note The name of the new folder includes the ABRicate database you specified when you started the run ( xxx ), as well as the identity and coverage settings ( yy and xx ). This is followed by the date and time ( YYYY-MM-DD_HH:MM ).","title":"Downloading outputs"},{"location":"unloading.html#downloading-the-output-files","text":"To transfer the files to your personal computer drag and drop. Each time Tool 3 runs it makes a new folder inside the output folder, output_tool1 , which can be found here: ~/genome_tools/Tool_1/output_tool1/ The output folders are named according to the run parameters: xxx-yy-zz_YYYY-MM-DD_HH:MM Note The name of the new folder includes the ABRicate database you specified when you started the run ( xxx ), as well as the identity and coverage settings ( yy and xx ). This is followed by the date and time ( YYYY-MM-DD_HH:MM ).","title":"Downloading the output files"}]}